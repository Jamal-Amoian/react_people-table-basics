{"version":3,"sources":["components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/Navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","to","name","classNames","sex","born","died","motherName","length","fatherName","PeopleTable","selectedPersonName","useState","people","setPeople","isLoading","setIsLoading","useEffect","peopleFromServer","isSelected","map","slug","PeoplePage","personName","useParams","NotFoundPage","Navigation","selectedNavLink","setSelectedNavLink","role","onClick","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.16541f2b.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <>\n      <td>\n        <Link\n          to={`../${person.name}`}\n          className={classNames(\n            { 'has-text-danger': person.sex === 'f' },\n          )}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {\n          person.motherName?.length\n            ? (\n              (\n                <Link\n                  to={`../${person.motherName}`}\n                  className=\"has-text-danger\"\n                >\n                  {person.motherName}\n                </Link>\n              )\n            )\n            : '-'\n        }\n      </td>\n      <td>\n        <Link to={`../${person.fatherName}`}>\n          {\n            person.fatherName?.length\n              ? person.fatherName\n              : '-'\n          }\n        </Link>\n      </td>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  selectedPersonName?: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ selectedPersonName = '' }) => {\n  const [people, setPeople] = useState<Person[]>();\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(peopleFromServer => {\n        setPeople(peopleFromServer);\n\n        setIsLoading(false);\n      });\n  }, []);\n\n  const isSelected = (person: Person) => selectedPersonName === person.name;\n\n  return (\n    <>\n      <div className=\"box table-container\">\n        {\n          isLoading\n            ? (\n              <Loader />\n            )\n            : (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {\n                    people?.map(person => (\n                      <tr\n                        data-cy=\"person\"\n                        className={classNames(\n                          { 'has-background-warning': isSelected(person) },\n                        )}\n                      >\n                        <PersonLink\n                          person={person}\n                          key={person.slug}\n                        />\n                      </tr>\n                    ))\n                  }\n                </tbody>\n              </table>\n            )\n        }\n      </div>\n    </>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const { personName } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <PeopleTable\n        selectedPersonName={personName}\n      />\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Navigation = () => {\n  const [selectedNavLink, setSelectedNavLink] = useState<string>('');\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Link\n            className={classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': selectedNavLink === 'Home' },\n            )}\n            to=\"/\"\n            onClick={() => setSelectedNavLink('Home')}\n          >\n            Home\n          </Link>\n\n          <Link\n            className={classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': selectedNavLink === 'People' },\n            )}\n            to=\"people\"\n            onClick={() => setSelectedNavLink('People')}\n          >\n            People\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { Navigation } from './components/Navigation';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <HomePage />\n            }\n          />\n\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route path=\"people\">\n            <Route\n              index\n              element={\n                <PeoplePage />\n              }\n            />\n\n            <Route\n              path=\":personName\"\n              element={\n                <PeoplePage />\n              }\n            />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={\n              <NotFoundPage />\n            }\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}